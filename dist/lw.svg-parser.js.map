{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b11cd9ca218ead75ab0c","webpack:///./parser.js","webpack:///./tag.js","webpack:///./path.js","webpack:///./tagparser.js","webpack:///./trace.js"],"names":["Parser","settings","element","editor","document","defs","tags","supportedTags","parseTags","includes","skipTags","excludes","onTag","onTagContext","input","loadFromString","File","loadFromFile","XMLDocument","loadFromXMLDocument","Element","loadFromElement","Promise","reject","Error","resolve","nodeName","textContent","getElementsByTagName","documentElement","then","catch","_parseEditor","parser","DOMParser","XMLDoc","parseFromString","name","version","fingerprint","match","reader","FileReader","onload","event","target","result","onerror","readAsText","load","parse","_parseElement","applyMatrix","tag","console","info","callback","context","_onTag","call","parent","indexOf","_skipTag","tagParser","childTag","childNodes","forEach","childNode","addChild","children","length","message","warn","attr","DEG_TO_RAD","Math","PI","Tag","toLowerCase","layer","attrs","paths","matrix","matrixApplied","path","point","push","setMatrix","Object","keys","setAttr","key","value","defaultValue","undefined","getAttr","getLayerName","clearPath","close","x","y","relative","addPoint","getPoint","points","i","il","addMatrix","angle","arguments","cos","sin","tan","transform","Point","parseFloat","isNaN","error","Path","firstPoint","isEqual","isClosed","map","TagParser","currentCommand","lastCommand","pathData","handler","_parseTagAttrs","attributes","style","some","_normalizeTagAttr","split","nodeValue","colorsAttrs","attrName","_parseViewBoxAttr","_parseTransformAttr","replace","trim","_skipTagAttr","_normalizeTagAttrUnit","_normalizeTagAttrPoints","_normalizeTagAttrRange","_normalizeTagAttrPreserveAspectRatio","stringValue","floatValue","_parseNumbers","min","max","filter","params","defer","align","meet","slice","rawParams","substr","viewBox","width","height","scaleX","scaleY","translateX","translateY","preserveAspectRatio","newWidth","newHeight","translate","scale","transformAttr","transformations","pop","type","raw","func","tagTransform","apply","newPath","closePath","addPoints","title","description","id","useTag","setLayerName","_path","shift","concat","_polyline","w","h","rx","ry","dx","dy","r","cx","cy","num","splice","join","dAttr","commands","parseError","toUpperCase","_clearPath","_newPath","_addPoints","_closePath","every","_paths","p1","rl","x1","y1","x2","y2","p2","p3","p4","bezier","CubicBezier","coords","trace","QuadricBezier","large","sweep","arc","MATH_PI_2","Arc","init","radians","startAngle","sweepAngle","center","m","v0","v1","p","n","sqrt","pow","acos","t","mod","abs","_addPoint","transformedPoint","radiiCheck","cSquareNumerator","cSquareRootDenom","cRadicand","cCoef","transformedCenter","startVector","endVector","angleBetween"],"mappings":"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","file":"lw.svg-parser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SVGParser\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SVGParser\"] = factory();\n\telse\n\t\troot[\"SVGParser\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b11cd9ca218ead75ab0c","// Imports\nimport { Tag } from './tag'\nimport { TagParser } from './tagparser'\n\n// SVG parser class\nclass Parser {\n    // Class constructor...\n    constructor(settings) {\n        // Defaults settings\n        settings = settings || {}\n\n        // Init properties\n        this.element  = null // XML document Element object\n        this.editor   = null // Editor info { name, version, fingerprint }\n        this.document = null // Document info { width, height, viewBox }\n        this.defs     = null // Defined <defs> (DOM) nodes list by id\n        this.tags     = null // Tag objects hierarchy\n\n        // Supported tags by this lib\n        this.supportedTags = [\n            'svg', 'g', 'defs', 'use',\n            'line', 'polyline', 'polygon',\n            'rect', 'circle', 'ellipse', 'path',\n            'title', 'desc'\n        ]\n\n        // Tags list to includes/excludes\n        this.parseTags = settings.includes || this.supportedTags\n        this.skipTags  = settings.excludes || ['#text']  // silent (no warning)\n\n        // User onTag callback ?\n        settings.onTag && this.onTag(settings.onTag, settings.onTagContext)\n    }\n\n    // Load raw XML string, XMLDocument, Element or File object\n    load(input) {\n        // Load raw XML string\n        if (typeof input === 'string') {\n            return this.loadFromString(input)\n        }\n\n        // Load File object\n        if (input instanceof File) {\n            return this.loadFromFile(input)\n        }\n\n        // Load XMLDocument object\n        if (input instanceof XMLDocument) {\n            return this.loadFromXMLDocument(input)\n        }\n\n        // Load Element object\n        if (input instanceof Element) {\n            return this.loadFromElement(input)\n        }\n\n        // Return rejected promise with an Error object\n        return Promise.reject(new Error('Unsupported input format.'))\n    }\n\n    // Load from Element object\n    loadFromElement(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof Element)) {\n                reject(new Error('Input param must be a Element object.'))\n            }\n\n            // Parser error\n            if (input.nodeName === 'parsererror') { // FF\n                reject(new Error(input.textContent))\n            }\n\n            if (input.nodeName === 'html' && input.getElementsByTagName('parsererror')) { // Chrome\n                reject(new Error(input.getElementsByTagName('parsererror')[0].textContent))\n            }\n\n            // Set document element\n            this.element = input\n\n            // Resolve promise\n            resolve(input)\n        })\n    }\n\n    // Load from XMLDocument object\n    loadFromXMLDocument(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof XMLDocument)) {\n                reject(new Error('Input param must be a XMLDocument object.'))\n            }\n\n            // Load from Element...\n            this.loadFromElement(input.documentElement).then(resolve).catch(reject)\n        })\n    }\n\n    // Load raw XML string\n    loadFromString(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (typeof input !== 'string') {\n                reject(new Error('Input param must be a string.'))\n            }\n\n            // Parse svg editor\n            this._parseEditor(input)\n\n            // Parse string as DOM object\n            let parser = new DOMParser()\n            let XMLDoc = parser.parseFromString(input, 'text/xml')\n\n            // Load from XMLDocument...\n            this.loadFromXMLDocument(XMLDoc).then(resolve).catch(reject)\n        })\n    }\n\n    // Try to get the svg editor from input string\n    _parseEditor(input) {\n        // Reset editor\n        this.editor = {\n            name       : 'unknown',\n            version    : null,\n            fingerprint: null\n        }\n\n        // Fingerprint matches\n        let fingerprint\n\n        // Inkscape\n        fingerprint = input.match(/<!-- Created with Inkscape .*-->/i)\n\n        if (fingerprint) {\n            this.editor.name        = 'inkscape'\n            this.editor.fingerprint = fingerprint[0]\n\n            return this.editor\n        }\n\n        // Illustrator\n        fingerprint = input.match(/<!-- Generator: Adobe Illustrator ([0-9\\.]+), .*-->/i)\n\n        if (fingerprint) {\n            this.editor.name        = 'illustrator'\n            this.editor.version     = fingerprint[1]\n            this.editor.fingerprint = fingerprint[0]\n\n            return this.editor\n        }\n\n        // Return default\n        return this.editor\n    }\n\n    // Load from File object\n    loadFromFile(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof File)) {\n                reject(new Error('Input param must be a File object.'))\n            }\n\n            // Create file reader\n            let reader = new FileReader()\n\n            // Register reader events handlers\n            reader.onload = event => {\n                this.loadFromString(event.target.result).then(resolve).catch(reject)\n            }\n\n            reader.onerror = event => {\n                reject(new Error('Error reading file : ' + input.name))\n            }\n\n            // Finally read input file as text\n            reader.readAsText(input)\n        })\n    }\n\n    // Parse the (loaded) element\n    parse(input) {\n        // Reset properties\n        this.document = null\n        this.defs     = {}\n        this.tags     = null\n\n        // Load input if provided\n        if (input) {\n            return new Promise((resolve, reject) => {\n                this.load(input).then(() => {\n                    resolve(this.parse())\n                }).catch(reject)\n            })\n        }\n\n        // Start parsing element\n        return new Promise((resolve, reject) => {\n            // If no element is loaded\n            if (! this.element) {\n                reject(new Error('No element is loaded, call the load method before.'))\n            }\n\n            // Parse the main Element (recursive)\n            this.tags = this._parseElement(this.element)\n\n            if (! this.tags) {\n                reject(new Error('No supported tags found.'))\n            }\n\n            // Apply matrix (recursive)\n            this.tags.applyMatrix()\n\n            // Resolve the promise\n            resolve(this.tags)\n        })\n    }\n\n    // On tag callback\n    _onTag(tag) {\n        console.info('onTag:', tag)\n    }\n\n    // Register on tag callback\n    onTag(callback, context) {\n        this._onTag = tag => callback.call(context || this, tag)\n    }\n\n    // Parse the provided Element and return an Tag collection (recursive)\n    _parseElement(element, parent) {\n        // Create base tag object\n        let tag = new Tag(element, parent)\n\n        // Exluded tag ?\n        if (this.skipTags.indexOf(tag.name) !== -1) {\n            return null // silent\n        }\n\n        // Supported tag ?\n        if (this.parseTags.indexOf(tag.name) === -1) {\n            return this._skipTag(tag, 'unsupported')\n        }\n\n        // Parse the tag\n        let tagParser = new TagParser(tag, parser)\n\n        if (! tagParser.parse()) {\n            return false\n        }\n\n        // Call the on tag callback\n        this._onTag(tag)\n\n        // Parse child nodes\n        let childTag\n\n        element.childNodes.forEach(childNode => {\n            // Parse child element\n            if (childTag = this._parseElement(childNode, tag)) {\n                tag.addChild(childTag)\n            }\n        })\n\n        // Empty group\n        if (['svg', 'g'].indexOf(tag.name) !== -1 && ! tag.children.length) {\n            return this._skipTag(tag, 'empty')\n        }\n\n        // Return tag object\n        return tag\n    }\n\n    // Log skip tag warning message\n    _skipTag(tag, message) {\n        console.warn('Skip tag :', message + ':', tag)\n        return false\n    }\n\n    // Log skip tag attribute warning message\n    _skipTagAttr(tag, attr, message) {\n        console.warn('Skip tag attribute :', message + ':', attr, tag)\n        return false\n    }\n\n}\n\n// Exports\nexport { Parser }\nexport default Parser\n\n\n\n// WEBPACK FOOTER //\n// ./parser.js","import { Path, Point } from './path'\n\nconst DEG_TO_RAD = Math.PI / 180\n\n// SVG tag class\nclass Tag {\n    // Class constructor...\n    constructor(element, parent) {\n        // Init properties\n        this.element       = element\n        this.name          = element.nodeName.toLowerCase()\n        this.parent        = parent || null\n        this.layer         = null\n        this.attrs         = {}\n        this.children      = []\n        this.paths         = []\n        this.matrix        = null\n        this.matrixApplied = false\n        this.path          = new Path()\n        this.point         = new Point(0, 0)\n\n        // Add first path\n        this.paths.push(this.path)\n\n        // Reset/Set transform matrix\n        this.setMatrix(this.parent && this.parent.matrix)\n\n        // Clone parent attributes\n        if (this.parent && this.parent.name === 'g') {\n            // Inherit layer name\n            this.layer = this.parent.layer\n\n            // Clone parent attributes\n            Object.keys(this.parent.attrs).forEach(key => {\n                this.setAttr(key, this.parent.attrs[key])\n            })\n        }\n    }\n\n    setAttr(name, value) {\n        this.attrs[name] = value\n    }\n\n    getAttr(name, defaultValue) {\n        return this.attrs[name] !== undefined ? this.attrs[name]\n            : (defaultValue !== undefined ? defaultValue : null)\n    }\n\n    getLayerName() {\n        if (this.name === 'g') {\n            return this.getAttr('inkscape:label', this.getAttr('id', null))\n        }\n    }\n\n    setLayerName(name) {\n        if (this.name === 'g') {\n            this.layer = name || this.getLayerName()\n        }\n    }\n\n    addChild(childTag) {\n        this.children.push(childTag)\n    }\n\n    clearPath() {\n        this.path = new Path()\n    }\n\n    newPath() {\n        if (this.path.length > 0) {\n            this.clearPath()\n            this.paths.push(this.path)\n        }\n    }\n\n    closePath() {\n        return this.path.close()\n    }\n\n    addPoint(x, y, relative) {\n        // Relative from the last point\n        if (relative) {\n            x += this.point.x\n            y += this.point.y\n        }\n\n        // Add current point\n        this.path.addPoint(x, y)\n\n        // Update current point\n        this.point = this.path.getPoint(-1)\n    }\n\n    addPoints(points, relative) {\n        // For each couple of points\n        for (let i = 0, il = points.length; i < il; i += 2) {\n            this.addPoint(points[i], points[i + 1], relative)\n        }\n    }\n\n    setMatrix(matrix) {\n        this.matrix        = matrix || [1, 0, 0, 1, 0, 0]\n        this.matrixApplied = false\n    }\n\n    addMatrix(matrix) {\n        this.matrixApplied = false\n        this.matrix        = [\n            this.matrix[0] * matrix[0] + this.matrix[2] * matrix[1],\n            this.matrix[1] * matrix[0] + this.matrix[3] * matrix[1],\n            this.matrix[0] * matrix[2] + this.matrix[2] * matrix[3],\n            this.matrix[1] * matrix[2] + this.matrix[3] * matrix[3],\n            this.matrix[0] * matrix[4] + this.matrix[2] * matrix[5] + this.matrix[4],\n            this.matrix[1] * matrix[4] + this.matrix[3] * matrix[5] + this.matrix[5]\n        ]\n    }\n\n    translate(x, y) {\n        y = y === undefined ? 0 : y\n        this.addMatrix([1, 0, 0, 1, x, y])\n    }\n\n    rotate(angle, x, y) {\n        angle = angle * DEG_TO_RAD\n\n        if (arguments.length == 2) {\n            this.addMatrix([1, 0, 0, 1, x, y])\n        }\n\n        this.addMatrix([Math.cos(angle), Math.sin(angle), -Math.sin(angle), Math.cos(angle), 0, 0])\n\n        if (arguments.length == 2) {\n            this.addMatrix([1, 0, 0, 1, -x, -y])\n        }\n    }\n\n    scale(x, y) {\n        y = y === undefined ? x : y\n        this.addMatrix([x, 0, 0, y, 0, 0])\n    }\n\n    skewX(angle) {\n        this.addMatrix([1, 0, Math.tan(angle * DEG_TO_RAD), 1, 0, 0])\n    }\n\n    skewY(angle) {\n        this.addMatrix([1, Math.tan(angle * DEG_TO_RAD), 0, 1, 0, 0])\n    }\n\n    applyMatrix(matrix) {\n        if (this.matrixApplied) {\n            return null\n        }\n\n        matrix && this.addMatrix(matrix)\n\n        this.paths.forEach(path => {\n            path.transform(this.matrix)\n        })\n\n        this.setMatrix(null)\n        this.matrixApplied = true\n\n        this.children.forEach(tag => {\n            tag.applyMatrix(matrix)\n        })\n    }\n}\n\n// Exports\nexport { Tag }\nexport default Tag\n\n\n\n// WEBPACK FOOTER //\n// ./tag.js","class Point {\n    // Class constructor...\n    constructor(x, y) {\n        // Init properties\n        this.x = parseFloat(x)\n        this.y = parseFloat(y)\n\n        if (isNaN(this.x) || isNaN(this.y)) {\n            console.error('x:', x, 'y:', y)\n            throw new Error('Float value!!!')\n        }\n    }\n\n    isEqual(point) {\n        return this.x === point.x && this.y === point.y\n    }\n}\n\nclass Path {\n    // Class constructor...\n    constructor(element, parent) {\n        // Init properties\n        this.points = []\n        this.length = 0\n    }\n\n    getPoint(i) {\n        return this.points[i < 0 ? this.length + i : i] || null\n    }\n\n    addPoint(x, y) {\n        this.points.push(new Point(x, y))\n        this.length = this.points.length\n    }\n\n    addPoints(points) {\n        // For each couple of points\n        for (let i = 0, il = points.length; i < il; i += 2) {\n            this.addPoint(points[i], points[i + 1])\n        }\n    }\n\n    isClosed() {\n        let firstPoint = this.getPoint(0)\n        return firstPoint && firstPoint.isEqual(this.getPoint(-1))\n    }\n\n    close() {\n        if (! this.isClosed() && this.length > 2) {\n            let firstPoint = this.getPoint(0)\n            this.addPoint(firstPoint.x, firstPoint.y)\n            return true\n        }\n\n        return false\n    }\n\n    transform(matrix) {\n        this.points = this.points.map(point => {\n            return new Point(\n                matrix[0] * point.x + matrix[2] * point.y + matrix[4],\n                matrix[1] * point.x + matrix[3] * point.y + matrix[5]\n            )\n        })\n    }\n}\n\n// Exports\nexport { Path, Point }\nexport default Path\n\n\n\n// WEBPACK FOOTER //\n// ./path.js","import { Arc } from './trace'\nimport { Point } from './path'\n\n// SVG tag parser\nclass TagParser {\n    // Class constructor...\n    constructor(tag, parser) {\n        // Init properties\n        this.tag            = tag\n        this.parser         = parser\n        this.currentCommand = null\n        this.lastCommand    = null\n        this.pathData       = null\n    }\n\n    parse() {\n        // Get internal parser from node name\n        let handler = this['_' + this.tag.name]\n\n        // Implemented tag handler?\n        if (! handler || typeof handler !== 'function') {\n            return this.parser._skipTag(this.tag, 'not yet implemented')\n        }\n\n        // Parse tag attributes\n        this._parseTagAttrs()\n\n        // Parse tag\n        return handler.call(this)\n    }\n\n    // Parse the tag attributes\n    _parseTagAttrs() {\n        // Get tag attributes\n        let attrs = this.tag.element.attributes\n\n        if (! attrs) {\n            return null\n        }\n\n        // For each attribute\n        let attr, value, style\n\n        Object.keys(attrs).some(key => {\n            // Current attribute\n            attr = attrs[key]\n\n            // Normalize attribute value\n            value = this._normalizeTagAttr(attr)\n\n            if (value === false) {\n                return false // continue\n            }\n\n            // Special case\n            if (attr.nodeName === 'style') {\n                style = value\n            }\n            else {\n                // Set new attribute name/value\n                this.tag.setAttr(attr.nodeName, value)\n            }\n        })\n\n        // If style attribute (override tag attributes)\n        // TODO get/parse global style and override this one...\n        style && style.split(';').some(attr => {\n            // Current style\n            attr = attr.split(':')\n            attr = { nodeName: attr[0], nodeValue: attr[1] }\n\n            // Normalize attribute value\n            value = this._normalizeTagAttr(attr)\n\n            if (value === false) {\n                return false // continue\n            }\n\n            // Set new attribute name/value\n            this.tag.setAttr(attr.nodeName, value)\n        })\n\n        // Set inherited color\n        let colorsAttrs = ['fill', 'stroke', 'color']\n\n        colorsAttrs.forEach(attrName => {\n            if (this.tag.getAttr(attrName) === 'inherit') {\n                this.tag.setAttr(attrName, this.tag.parent.getAttr(attrName, 'none'))\n            }\n        })\n\n        // Parse viewBox attribute\n        this._parseViewBoxAttr()\n\n        // Parse transform attribute\n        this._parseTransformAttr()\n    }\n\n    // Normalize tag attribute\n    _normalizeTagAttr(attr) {\n        // Normalize whitespaces\n        let value = attr.nodeValue\n            .replace(/(\\r?\\n|\\r)+/gm, ' ') // Remove all new line chars\n            .replace(/\\s+/gm, ' ')         // Reduce multiple whitespaces\n            .trim()                        // Remove trailing whitespaces\n\n        if (! value.length) {\n            return this.parser._skipTagAttr(this.tag, attr, 'empty')\n        }\n\n        // Filters\n        switch (attr.nodeName) {\n            // Normalize size unit -> to px\n            case 'x':\n            case 'y':\n            case 'x1':\n            case 'y1':\n            case 'x2':\n            case 'y2':\n            case 'r':\n            case 'rx':\n            case 'ry':\n            case 'cx':\n            case 'cy':\n            case 'width':\n            case 'height':\n            case 'fontSize':\n            case 'strokeWidth':\n                value = this._normalizeTagAttrUnit(attr)\n            break\n\n            // Normalize points attribute\n            case 'points':\n            case 'viewBox':\n                value = this._normalizeTagAttrPoints(attr)\n            break\n\n            // Range limit to [0 - 1]\n            case 'opacity':\n            case 'fillOpacity':\n            case 'strokeOpacity':\n                value = this._normalizeTagAttrRange(attr, 0, 1)\n            break\n\n            case 'preserveAspectRatio':\n                value = this._normalizeTagAttrPreserveAspectRatio(attr)\n            break\n        }\n\n        // Return normalized value\n        return value\n    }\n\n    // Normalize attribute unit to px\n    _normalizeTagAttrUnit(attr) {\n        let stringValue = attr.nodeValue.toLowerCase()\n        let floatValue  = parseFloat(stringValue)\n\n        if (isNaN(floatValue)) {\n            return this.parser._skipTagAttr(this.tag, attr, 'only numeric value allowed')\n        }\n\n        if (stringValue.indexOf('mm') !== -1) {\n            return floatValue * 3.5433070869\n        }\n\n        if (stringValue.indexOf('cm') !== -1) {\n            return floatValue * 35.433070869\n        }\n\n        if (stringValue.indexOf('in') !== -1) {\n            return floatValue * 90.0\n        }\n\n        if (stringValue.indexOf('pt') !== -1) {\n            return floatValue * 1.25\n        }\n\n        if (stringValue.indexOf('pc') !== -1) {\n            return floatValue * 15.0\n        }\n\n        return floatValue\n    }\n\n    // Normalize points attribute\n    _normalizeTagAttrPoints(attr) {\n        let points = this._parseNumbers(attr.nodeValue)\n\n        if (points === false) {\n            return this.parser._skipTagAttr(this.tag, attr, 'only numeric values are allowed')\n        }\n\n        if (! points.length) {\n            return this.parser._skipTagAttr(this.tag, attr, 'empty points list')\n        }\n\n        if (points.length % 0) {\n            return this.parser._skipTagAttr(this.tag, attr, 'the number of points must be even')\n        }\n\n        return points\n    }\n\n    // Normalize range attribute like \"opacity\"\n    _normalizeTagAttrRange(attr, min, max) {\n        let stringValue = attr.nodeValue.trim()\n        let floatValue  = parseFloat(stringValue)\n\n        if (isNaN(floatValue)) {\n            return this.parser._skipTagAttr(this.tag, attr, 'only numeric values are allowed')\n        }\n\n        if (floatValue < min || floatValue > max) {\n            return this.parser._skipTagAttr(this.tag, attr, 'out of range [' + min + ', ' + max + ']')\n        }\n\n        return floatValue\n    }\n\n    // Parse points string as numbers array\n    _parseNumbers(points) {\n        // http://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly\n        if (typeof points === 'string') {\n            points = points.split(/([+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?/g)\n            .filter(point => {\n                return point && ['', ','].indexOf(point.trim()) === -1\n            })\n        }\n\n        // Normalize to float values\n        points = points.map(parseFloat)\n\n        // Test if all numbers is valid\n        if (points.some(isNaN)) {\n            return false\n        }\n\n        return points\n    }\n\n    // Normalize the preserveAspectRatio attribute\n    _normalizeTagAttrPreserveAspectRatio(attr) {\n        let params = {\n            defer: false,\n            align: 'none',\n            meet : true,\n            slice: false\n        }\n\n        let rawParams = attr.nodeValue\n\n        if (rawParams.indexOf('defer') === 0) {\n            rawParams    = rawParams.substr(6)\n            params.defer = true\n        }\n\n        rawParams    = rawParams.split(' ')\n        params.align = rawParams[0]\n        params.meet  = rawParams[1] || 'meet'\n        params.meet  = params.meet === 'meet'\n        params.slice = ! params.meet\n\n        return params\n    }\n\n    // Parse viewBox attribute and set transformations\n    _parseViewBoxAttr() {\n        // Get viewBox attribute\n        let viewBox = this.tag.getAttr('viewBox', null)\n\n        // No viewBox...\n        if (viewBox === null) {\n            return null\n        }\n\n        let width      = this.tag.getAttr('width', viewBox[2])\n        let height     = this.tag.getAttr('height', viewBox[3])\n        let scaleX     = width  / viewBox[2]\n        let scaleY     = height / viewBox[3]\n        let translateX = viewBox[0]\n        let translateY = viewBox[1]\n\n        let preserveAspectRatio = this.tag.getAttr('preserveAspectRatio')\n\n        if (preserveAspectRatio) {\n            let newWidth, newHeight\n\n            if (preserveAspectRatio.meet) {\n                if (scaleX > scaleY) {\n                    scaleX   = scaleY\n                    newWidth = viewBox[2] * scaleX\n                }\n                else if (scaleX < scaleY) {\n                    scaleY    = scaleX\n                    newHeight = viewBox[3] * scaleY\n                }\n            }\n            else if (preserveAspectRatio.slice) {\n                if (scaleX < scaleY) {\n                    scaleX   = scaleY\n                    newWidth = viewBox[2] * scaleX\n                }\n                else if (scaleX > scaleY) {\n                    scaleY    = scaleX\n                    newHeight = viewBox[3] * scaleY\n                }\n            }\n\n            if (newWidth !== undefined) {\n                if (preserveAspectRatio.align === 'xMidYMid') {\n                    this.tag.translate((width - newWidth) / 2, 0)\n                }\n                else if (preserveAspectRatio.align === 'xMaxYMax') {\n                    this.tag.translate(width - newWidth, 0)\n                }\n            }\n            else if (newHeight !== undefined) {\n                if (preserveAspectRatio.align === 'xMidYMid') {\n                    this.tag.translate(0, (height - newHeight) / 2)\n                }\n                else if (preserveAspectRatio.align === 'xMaxYMax') {\n                    this.tag.translate(0, height - newHeight)\n                }\n            }\n        }\n\n        this.tag.scale(scaleX, scaleY)\n        this.tag.translate(-translateX, -translateY)\n\n        this.tag.setAttr('width' , width)\n        this.tag.setAttr('height', height)\n    }\n\n    // Parse transform attribute and set transformations\n    _parseTransformAttr() {\n        // Get transform attribute\n        let transformAttr = this.tag.getAttr('transform', null)\n\n        // No transformation...\n        if (transformAttr === null || ! transformAttr.length) {\n            return null\n        }\n\n        // Parse attribute (split group on closing parenthesis)\n        let transformations = transformAttr.split(')')\n\n        // Remove last entry due to last \")\" found\n        transformations.pop()\n\n        // For each transformation\n        let transform, type, params, matrix\n\n        transformations.some(raw => {\n            // Split name and value on opening parenthesis\n            transform = raw.split('(')\n\n            // Invalid parts number\n            if (transform.length !== 2) {\n                return this.parser._skipTagAttr(this.tag, transformAttr, 'malformed') // continue\n            }\n\n            type = transform[0].trim()\n\n            // Quik hack 1/2\n            let func = type\n            if (func === 'matrix') {\n                func = 'addMatrix'\n            }\n\n            // Get tag transform method\n            let tagTransform = this.tag[func]\n\n            if (typeof tagTransform !== 'function') {\n                return this.parser._skipTagAttr(this.tag, transformAttr, 'unsupported transform type :' + type)\n            }\n\n            params = transform[1].trim()\n            params = this._parseNumbers(params)\n\n            // Skip empty value\n            if (! params.length) {\n                return this.parser._skipTagAttr(this.tag, transformAttr, 'malformed transform type :' + type)\n            }\n\n            // Quik hack 2/2\n            if (func == 'addMatrix') {\n                params = [params]\n            }\n\n            // Call tag transform method like \"tag.translate(param1, ..., paramN)\"\n            tagTransform.apply(this.tag, params)\n        })\n    }\n\n    _newPath() {\n        this.tag.newPath()\n    }\n\n    _clearPath() {\n        this.tag.clearPath()\n    }\n\n    _closePath() {\n        return this.tag.closePath()\n    }\n\n    _addPoints(points, relative) {\n        if (! points.length) {\n            return this.parser._skipTag(this.tag, 'empty points list')\n        }\n\n        if (points.length % 0) {\n            return this.parser._skipTag(this.tag, 'the number of points must be even')\n        }\n\n        relative = arguments.length < 2 && this.currentCommand.relative\n\n        this.tag.addPoints(points, relative)\n        return true\n    }\n\n    // SVG specs at https://www.w3.org/TR/SVG11/\n\n    _svg() {\n        // Only parse the root SVG tag as main document\n        if (this.parser.document) {\n            // Handled tag\n            return true\n        }\n\n        // Get the document size\n        let width  = this.tag.getAttr('width')\n        let height = this.tag.getAttr('height')\n\n        // Invalid size\n        if (! width || width < 0 || ! height || height < 0) {\n            throw new Error('Invalid document size: ' + width + ' / ' + height)\n        }\n\n        // Set document size\n        this.parser.document = {\n            width : width,\n            height: height\n        }\n\n        // Get document viewBox or set default to document size\n        let viewBox = this.tag.getAttr('viewBox', [0, 0, width, height])\n\n        this.parser.document.viewBox = {\n            x     : viewBox[0],\n            y     : viewBox[1],\n            width : viewBox[2],\n            height: viewBox[3]\n        }\n\n        // Check inkscape version\n        if (this.parser.editor.name === 'inkscape') {\n            this.parser.editor.version = this.tag.getAttr('inkscape:version')\n        }\n\n        // Handled tag\n        return true\n    }\n\n    _title() {\n        // Register the first encountered title tag as document title\n        if (this.parser.document && ! this.parser.document.title) {\n            this.parser.document.title = this.tag.element.textContent\n        }\n\n        // Skipped tag\n        return false\n    }\n\n    _desc() {\n        // Register the first encountered desc tag as document description\n        if (this.parser.document && ! this.parser.document.description) {\n            this.parser.document.description = this.tag.element.textContent\n        }\n\n        // Skipped tag\n        return false\n    }\n\n    _defs() {\n        // Register all child element with an id attribute\n        this.tag.element.childNodes.forEach(childNode => {\n            childNode.id && (this.parser.defs[childNode.id] = childNode)\n        })\n\n        // Skipped tag\n        return false\n    }\n\n    _use() {\n        // Get the target id\n        let target  = this.tag.getAttr('xlink:href').replace(/^#/, '')\n\n        // Try to get the defined element\n        let element = this.parser.defs[target]\n\n        if (! element) {\n            return this.parser._skipTag(this.tag, 'undefined reference [' + target + ']')\n        }\n\n        // Parse the defined element and set new parent from <use> tag parent\n        let useTag = this.parser._parseElement(element, this.tag.parent)\n\n        if (! useTag) {\n            return this.parser._skipTag(this.tag, 'empty reference [' + target + ']')\n        }\n\n        // Set matrix from real parent (<use>)\n        useTag.setMatrix(this.tag.matrix)\n\n        // Replace the use tag with new one\n        this.tag.parent.addChild(useTag)\n\n        // Skipped tag\n        return false\n    }\n\n    _g() {\n        // Set the tag layer name\n        this.tag.setLayerName()\n\n        // Handled tag\n        return true\n    }\n\n    _line() {\n        // Handled tag\n        return this._path([\n            'M', this.tag.getAttr('x1'), this.tag.getAttr('y1'),\n            'L', this.tag.getAttr('x2'), this.tag.getAttr('y2')\n        ])\n    }\n\n    _polyline(close=false) {\n        let points = this.tag.getAttr('points')\n        let path   = ['M', points.shift(), points.shift(), 'L']\n\n        path = path.concat(points)\n        close && path.push('Z')\n\n        // Handled tag\n        return this._path(path)\n    }\n\n    _polygon() {\n        // Handled like polyline but closed\n        return this._polyline(true)\n    }\n\n    _rect() {\n        // Get rectangle attributes\n        let w  = this.tag.getAttr('width')\n        let h  = this.tag.getAttr('height')\n        let x  = this.tag.getAttr('x', 0)\n        let y  = this.tag.getAttr('y', 0)\n        let rx = this.tag.getAttr('rx', null)\n        let ry = this.tag.getAttr('ry', null)\n\n        // Simple rect\n        if (!rx && !ry) {\n            // Handled tag\n            return this._path(['M', x, y, 'h', w, 'v', h, 'h', -w, 'z'])\n        }\n\n        // If a properly specified value is provided for ‘rx’, but not for ‘ry’,\n        // then set both rx and ry to the value of ‘rx’ and vis-vera...\n        if (rx === null) rx = ry\n        if (ry === null) ry = rx\n\n        // A negative value is an error\n        if (rx === null || rx === null || rx < 0 || ry < 0) {\n            // Skip tag\n            return this.parser._skipTag(this.tag, 'negative value for \"rx/ry\" not allowed')\n        }\n\n        // If rx is greater than half of ‘width’, then set rx to half of ‘width’.\n        // If ry is greater than half of ‘height’, then set ry to half of ‘height’.\n        if (rx > w / 2) rx = w / 2\n        if (ry > h / 2) ry = h / 2\n\n        let dx = rx * 2\n        let dy = ry * 2\n\n        // Handled tag\n        return this._path([\n            'M', x + rx, y,\n            'h', w - dx,\n            'c', rx, 0, rx, ry, rx, ry,\n            'v', h - dy,\n            'c', 0, ry, -rx, ry, -rx, ry,\n            'h', -w + dx,\n            'c', -rx, 0, -rx, -ry, -rx, -ry,\n            'v', -h + dy,\n            'c', 0, 0, 0, -ry, rx, -ry,\n            'z'\n        ])\n    }\n\n    _circle() {\n        let r = this.tag.getAttr('r', 0)\n\n        if (r <= 0) {\n            // Skipped tag\n            return false\n        }\n\n        let cx = this.tag.getAttr('cx', 0)\n        let cy = this.tag.getAttr('cy', 0)\n\n        // Handled tag\n        return this._path([\n            'M', cx-r, cy,\n            'A', r, r, 0, 0, 0, cx, cy+r,\n            'A', r, r, 0, 0, 0, cx+r, cy,\n            'A', r, r, 0, 0, 0, cx, cy-r,\n            'A', r, r, 0, 0, 0, cx-r, cy,\n            'Z'\n        ])\n    }\n\n    _ellipse() {\n        let rx = this.tag.getAttr('rx', 0)\n        let ry = this.tag.getAttr('ry', 0)\n\n        if (rx <= 0 || ry <= 0) {\n            // Skipped tag\n            return false\n        }\n\n        let cx = this.tag.getAttr('cx', 0)\n        let cy = this.tag.getAttr('cy', 0)\n\n        // Handled tag\n        return this._path([\n            'M', cx-rx, cy,\n            'A', rx, ry, 0, 0, 0, cx, cy+ry,\n            'A', rx, ry, 0, 0, 0, cx+rx, cy,\n            'A', rx, ry, 0, 0, 0, cx, cy-ry,\n            'A', rx, ry, 0, 0, 0, cx-rx, cy,\n            'Z'\n        ])\n    }\n\n    _paths(type, num, points) {\n        if (points.length > num) {\n            let handler, result = true\n\n            while(result && points.length) {\n                handler = this['_path' + type]\n                result  = handler.call(this, points.splice(0, num))\n            }\n\n            return result\n        }\n\n        return null\n    }\n\n    _path(path) {\n        // Provided path\n        if (path && typeof path !== 'string') {\n            path = path.join(' ')\n        }\n\n        // Get the paths data attribute value\n        let dAttr = path || this.tag.getAttr('d', null)\n\n        if (! dAttr) {\n            // Skipped tag\n            return false\n        }\n\n        // Split on each commands\n        let commands = dAttr.match(/([M|Z|L|H|V|C|S|Q|T|A]+([^M|Z|L|H|V|C|S|Q|T|A]+)?)/gi)\n\n        if (! commands) {\n            return this.parser._skipTag(this.tag, 'malformed \"d\" attribute')\n        }\n\n        // For each command...\n        this.currentCommand = {\n            raw     : null,\n            type    : null,\n            params  : null,\n            relative: null\n        }\n        this.lastCommand = this.currentCommand\n        this.pathData    = {}\n\n        let handler    = null\n        let parseError = false\n\n        commands.some(raw => {\n            // Remove trailing whitespaces\n            raw = raw.trim()\n\n            // Extract command char and params\n            this.currentCommand.raw      = raw\n            this.currentCommand.type     = raw[0].toUpperCase()\n            this.currentCommand.params   = raw.substr(1).trim()\n            this.currentCommand.relative = this.currentCommand.type !== raw[0]\n\n            // Get path handler from command char\n            handler = this['_path' + this.currentCommand.type]\n\n            if (! handler || typeof handler !== 'function') {\n                this.parser._skipTag(this.tag, 'unsupported path command [' + raw[0] + ']')\n                return parseError = true // break\n            }\n\n            // Extract all numbers from arguments string\n            this.currentCommand.params = this._parseNumbers(this.currentCommand.params)\n\n            if (this.currentCommand.params === false) {\n                this.parser._skipTag(this.tag, 'only numeric values are allowed in [' + this.currentCommand.raw + ']')\n                return parseError = true // break\n            }\n\n            // Execute command parser\n            if (! handler.call(this, this.currentCommand.params)) {\n                return parseError = true // break\n            }\n\n            // Update last command\n            this.lastCommand = {}\n\n            Object.keys(this.currentCommand).forEach(key => {\n                this.lastCommand[key] = this.currentCommand[key]\n            })\n        })\n\n        // Skip tag\n        if (parseError) {\n            this._clearPath()\n            return false\n        }\n\n        // Handled tag\n        return true\n    }\n\n    _pathM(points) {\n        // New path\n        this._newPath()\n\n        // Set the current point (start of new path)\n        // If is followed by multiple pairs of coordinates,\n        // the subsequent pairs are treated as implicit lineto commands.\n        return this._addPoints(points)\n    }\n\n    _pathZ() {\n        this._closePath()\n        return true\n    }\n\n    _pathL(points) {\n        return this._addPoints(points)\n    }\n\n    _pathH(points) {\n        return points.every(x => {\n            return this._addPoints([x, this.currentCommand.relative ? 0 : this.tag.point.y])\n        })\n    }\n\n    _pathV(points) {\n        return points.every(y => {\n            return this._addPoints([this.currentCommand.relative ? 0 : this.tag.point.x, y])\n        })\n    }\n\n    _pathC(points) {\n        // Multiple paths\n        let result = this._paths('C', 6, points)\n\n        if (result !== null) {\n            return result\n        }\n\n        // Single path\n        let p1 = this.tag.point\n        let rl = this.currentCommand.relative\n\n        let x1 = points[0] + (rl ? p1.x : 0)\n        let y1 = points[1] + (rl ? p1.y : 0)\n        let x2 = points[2] + (rl ? p1.x : 0)\n        let y2 = points[3] + (rl ? p1.y : 0)\n        let x  = points[4] + (rl ? p1.x : 0)\n        let y  = points[5] + (rl ? p1.y : 0)\n\n        this.pathData.x2 = x2\n        this.pathData.y2 = y2\n\n        let p2 = new Point(x1, y1)\n        let p3 = new Point(x2, y2)\n        let p4 = new Point(x, y)\n\n        //console.log('C', p1, p2, p3, p4)\n\n        // p1  : starting point\n        // p2  : control point\n        // p3  : control point\n        // p4  : end point\n        let bezier = new CubicBezier({ p1, p2, p3, p4 })\n        let coords = bezier.trace() // => [x,y, x,y, ...]\n\n        // Remove first point since it is added by last command\n        coords = coords.slice(2)\n\n        // Trace the line\n        return this._addPoints(coords, false)\n    }\n\n    _pathS(points) {\n        // Multiple paths\n        let result = this._paths('S', 4, points)\n\n        if (result !== null) {\n            return result\n        }\n\n        // Single path\n        let p1 = this.tag.point\n        let rl = this.currentCommand.relative\n\n        let x1 = p1.x\n        let y1 = p1.y\n\n        if (this.lastCommand.type === 'S' || this.lastCommand.type === 'C') {\n            x1 -= this.pathData.x2 - x1\n            y1 -= this.pathData.y2 - y1\n        }\n\n        let x2 = points[0] + (rl ? p1.x : 0)\n        let y2 = points[1] + (rl ? p1.y : 0)\n        let x  = points[2] + (rl ? p1.x : 0)\n        let y  = points[3] + (rl ? p1.y : 0)\n\n        this.pathData.x2 = x2\n        this.pathData.y2 = y2\n\n        let p2 = new Point(x1, y1)\n        let p3 = new Point(x2, y2)\n        let p4 = new Point(x, y)\n\n        //console.log('S', p1, p2, p3, p4)\n\n        // p1  : starting point\n        // p2  : control point\n        // p3  : control point\n        // p4  : end point\n        let bezier = new CubicBezier({ p1, p2, p3, p4 })\n        let coords = bezier.trace() // => [x,y, x,y, ...]\n\n        // Remove first point since it is added by last command\n        coords = coords.slice(2)\n\n        // Trace the line\n        return this._addPoints(coords, false)\n    }\n\n    _pathQ(points) {\n        // Multiple paths\n        let result = this._paths('Q', 4, points)\n\n        if (result !== null) {\n            return result\n        }\n\n        // Single path\n        let p1 = this.tag.point\n        let rl = this.currentCommand.relative\n\n        let x1 = points[0] + (rl ? p1.x : 0)\n        let y1 = points[1] + (rl ? p1.y : 0)\n        let x  = points[2] + (rl ? p1.x : 0)\n        let y  = points[3] + (rl ? p1.y : 0)\n\n        this.pathData.x1 = x1\n        this.pathData.y1 = y1\n\n        let p2 = new Point(x1, y1)\n        let p3 = new Point(x, y)\n\n        //console.log('Q', p1, p2, p3)\n\n        // p1  : starting point\n        // p2  : control point\n        // p3  : end point\n        let bezier = new QuadricBezier({ p1, p2, p3 })\n        let coords = bezier.trace() // => [x,y, x,y, ...]\n\n        // Remove first point since it is added by last command\n        coords = coords.slice(2)\n\n        // Trace the line\n        return this._addPoints(coords, false)\n    }\n\n    _pathT(points) {\n        // Multiple paths\n        let result = this._paths('T', 2, points)\n\n        if (result !== null) {\n            return result\n        }\n\n        // Single path\n        let p1 = this.tag.point\n        let rl = this.currentCommand.relative\n\n        let x1 = p1.x\n        let y1 = p1.y\n\n        if (this.lastCommand.type === 'Q' || this.lastCommand.type === 'T') {\n            x1 -= this.pathData.x1 - x1\n            y1 -= this.pathData.y1 - y1\n        }\n\n        let x = points[0] + (rl ? p1.x : 0)\n        let y = points[1] + (rl ? p1.y : 0)\n\n        this.pathData.x1 = x1\n        this.pathData.y1 = y1\n\n        let p2 = new Point(x1, y1)\n        let p3 = new Point(x, y)\n\n        //console.log('T', p1, p2, p3)\n\n        // p1  : starting point\n        // p2  : control point\n        // p3  : end point\n        let bezier = new QuadricBezier({ p1, p2, p3 })\n        let coords = bezier.trace() // => [x,y, x,y, ...]\n\n        // Remove first point since it is added by last command\n        coords = coords.slice(2)\n\n        // Trace the line\n        return this._addPoints(coords, false)\n    }\n\n    _pathA(points) {\n        // Multiple paths\n        let result = this._paths('A', 7, points)\n\n        if (result !== null) {\n            return result\n        }\n\n        // Single path\n        let rl    = this.currentCommand.relative\n        let p1    = this.tag.point\n        let rx    = points[0]\n        let ry    = points[1]\n        let angle = points[2]\n        let large = !!points[3]\n        let sweep = !!points[4]\n        let x     = points[5] + (rl ? p1.x : 0)\n        let y     = points[6] + (rl ? p1.y : 0)\n        let p2    = new Point(x, y)\n\n        //console.log('A', p1, rx, ry, angle, large, sweep, p2)\n\n        let arc    = new Arc({ p1, rx, ry, angle, large, sweep, p2 })\n        let coords = arc.trace() // => [x,y, x,y, ...]\n\n        // Remove first point since it is added by last command\n        coords = coords.slice(2)\n\n        // Trace the line\n        return this._addPoints(coords, false)\n    }\n}\n\n// Exports\nexport { TagParser }\nexport default TagParser\n\n\n\n// WEBPACK FOOTER //\n// ./tagparser.js","import { Point } from './path'\n\nconst MATH_PI_2  = Math.PI * 2\nconst DEG_TO_RAD = Math.PI / 180\n\n// Rewrite from https://github.com/MadLittleMods/svg-curve-lib/blob/master/src/js/svg-curve-lib.js#L84\nclass Arc {\n    // Class constructor...\n    constructor(settings) {\n        this.init(settings)\n    }\n\n    // Init arc properties\n    init(settings) {\n        // Init properties\n        this.p1    = settings.p1\n        this.p2    = settings.p2\n        this.rx    = settings.rx\n        this.ry    = settings.ry\n        this.angle = settings.angle\n        this.large = settings.large\n        this.sweep = settings.sweep\n\n        this.points     = null\n        this.radians    = null\n        this.startAngle = null\n        this.sweepAngle = null\n        this.center     = null\n    }\n\n    mod(x, m) {\n        return (x % m + m) % m\n    }\n\n    angleBetween(v0, v1) {\n        let p = v0.x * v1.x + v0.y * v1.y\n        let n = Math.sqrt((Math.pow(v0.x, 2) + Math.pow(v0.y, 2)) * (Math.pow(v1.x, 2) + Math.pow(v1.y, 2)))\n        return (v0.x * v1.y - v0.y * v1.x < 0 ? -1 : 1) * Math.acos(p / n)\n    }\n\n    getPoint(t) {\n        let angle = this.startAngle + (this.sweepAngle * t)\n\n        let x = this.rx * Math.cos(angle)\n        let y = this.ry * Math.sin(angle)\n\n        return new Point(\n            Math.cos(this.radians) * x - Math.sin(this.radians) * y + this.center.x,\n            Math.sin(this.radians) * x + Math.cos(this.radians) * y + this.center.y\n        )\n    }\n\n    _addPoint(point) {\n        this.points.push(point.x, point.y)\n    }\n\n    trace() {\n        // Reset points collection\n        this.points = []\n\n        // Get angle in radians\n        this.radians = this.mod(this.angle, 360) * DEG_TO_RAD\n\n        // If the endpoints are identical, then this is equivalent\n        // to omitting the elliptical arc segment entirely.\n        if(this.p1.x === this.p2.x && this.p1.y === this.p2.y) {\n            return this.points\n        }\n\n        this.rx = Math.abs(this.rx)\n        this.ry = Math.abs(this.ry)\n\n        // If rx = 0 or ry = 0 then this arc is treated as\n        // a straight line segment joining the endpoints.\n        if (this.rx === 0 || this.ry === 0) {\n            this._addPoint(this.p1)\n            this._addPoint(this.p2)\n            return this.points\n        }\n\n        // Following \"Conversion from endpoint to center parameterization\"\n        // http://www.w3.org/TR/SVG/implnote.html#ArcConversionEndpointToCenter\n\n        // Step #1: Compute transformedPoint\n        let dx = (this.p1.x - this.p2.x) / 2\n        let dy = (this.p1.y - this.p2.y) / 2\n\n        let transformedPoint = {\n            x:  Math.cos(this.radians) * dx + Math.sin(this.radians) * dy,\n            y: -Math.sin(this.radians) * dx + Math.cos(this.radians) * dy\n        }\n\n        // Ensure radii are large enough\n        let radiiCheck = Math.pow(transformedPoint.x, 2) / Math.pow(this.rx, 2) + Math.pow(transformedPoint.y, 2) / Math.pow(this.ry, 2)\n\n        if (radiiCheck > 1) {\n            this.rx = Math.sqrt(radiiCheck) * this.rx\n            this.ry = Math.sqrt(radiiCheck) * this.ry\n        }\n\n        // Step #2: Compute transformedCenter\n        let cSquareNumerator = Math.pow(this.rx, 2) * Math.pow(this.ry, 2) - Math.pow(this.rx, 2) * Math.pow(transformedPoint.y, 2) - Math.pow(this.ry, 2) * Math.pow(transformedPoint.x, 2)\n        let cSquareRootDenom = Math.pow(this.rx, 2) * Math.pow(transformedPoint.y, 2) + Math.pow(this.ry, 2) * Math.pow(transformedPoint.x, 2)\n        let cRadicand        = cSquareNumerator / cSquareRootDenom\n\n        // Make sure this never drops below zero because of precision\n        cRadicand = cRadicand < 0 ? 0 : cRadicand\n        let cCoef = (this.large !== this.sweep ? 1 : -1) * Math.sqrt(cRadicand)\n        let transformedCenter = {\n            x: cCoef * ( (this.rx * transformedPoint.y) / this.ry),\n            y: cCoef * (-(this.ry * transformedPoint.x) / this.rx)\n        }\n\n        // Step #3: Compute center\n        this.center = {\n            x: Math.cos(this.radians) * transformedCenter.x - Math.sin(this.radians) * transformedCenter.y + ((this.p1.x + this.p2.x) / 2),\n            y: Math.sin(this.radians) * transformedCenter.x + Math.cos(this.radians) * transformedCenter.y + ((this.p1.y + this.p2.y) / 2)\n        }\n\n        // Step #4: Compute start/sweep angles\n        // Start angle of the elliptical arc prior to the stretch and rotate operations.\n        // Difference between the start and end angles\n        let startVector = {\n            x: (transformedPoint.x - transformedCenter.x) / this.rx,\n            y: (transformedPoint.y - transformedCenter.y) / this.ry\n        }\n\n        let endVector = {\n            x: (-transformedPoint.x - transformedCenter.x) / this.rx,\n            y: (-transformedPoint.y - transformedCenter.y) / this.ry\n        }\n\n        this.startAngle = this.angleBetween({ x: 1, y: 0 }, startVector)\n        this.sweepAngle = this.angleBetween(startVector, endVector)\n\n        if (! this.sweep && this.sweepAngle > 0) {\n            this.sweepAngle -= MATH_PI_2\n        }\n\n        else if (this.sweep && this.sweepAngle < 0) {\n            this.sweepAngle += MATH_PI_2\n        }\n\n        // We use % instead of `mod(..)` because we want it to be -360deg to 360deg(but actually in radians)\n        this.sweepAngle %= MATH_PI_2\n\n        for (let t = 0; t <= 1; t += 0.01) {\n            this._addPoint(this.getPoint(t))\n        }\n\n        // Push last point\n        this._addPoint(this.p2)\n\n        // Return the points collection\n        return this.points\n    }\n}\n\n// Exports\nexport { Arc }\n\n\n\n// WEBPACK FOOTER //\n// ./trace.js"],"sourceRoot":""}